#------------------------------------------------------------------------------
#     user      -  Name used for authentication. If not specified uses venId
#     password  -  Password used when not using client certificates
#     venId     -  venID to use. If not set, one will be assiged by VTN.
#                  If using password authentication make sure that the
#                  user property is set in this case.
#     authType  -  password | certificate. If password, a user and/or venId
#                  and password must be configured. If certificate, a truststore
#                  and keystore must be configured
#     serverUrl -  The XMPP or HTTP URL for the VTN.
#     queryFirst - If true, query registration prior to doing a register.
#------------------------------------------------------------------------------
# cancelOnShutdown=false
#serverUrl=https://eiss.example.com/oadr2
serverUrl=https://eissdev.ipkeys.com/oadr2
authType=certificate
user=nhec2
password=Password!1
venId=nhec2
saveVenId=true
#
queryFirst=true
licenseKey=eissbox3
licenseUrl=https://eisspoint3.ipkeys.com:8443
licenseProduct=eissbox
licenseProductVersion=3.0.0
# Honeywell
bypassOpt=false
reportDuration=PT5M
minReportGranularity=PT1M
maxReportGranularity=PT5M
includeEnergyReport=true
alignReportStartInterval=0
# May be set to interval or point, default interval
reportFormat=interval
# registerReportPayload=universal_reports.xml
useProprietaryReporting=false
deltaReportingFlag=false
#------------------------------------------------------------------------------
# XMPP properties
#
#   serverURL     - XMPP URL for VTN
#   clientAddress - Addressed used by VEN to register using XMPP.
#                   if not specified, uses venID@serverHost/xmppResource
#   xmppResource  - The xmpp resource specifier, defaults to 'ven' if
#                   not provided
#   xmppDebug     - If true, enable XMPP debug window. Not supported on
#                   all platforms. If client does not start, make it false
#------------------------------------------------------------------------------
# clientAddress=ven1@eiss2.ipkeys.com/client
# xmppResource=client
# xmppDebug=false
# vtnId=01234567890123456789012345678901234567890123456789
#------------------------------------------------------------------------------
# HTTP properties
#
#   clientAddress - None to use oadrPoll, configured to VEN's registered
#                   address to use HTTP push.
#   vtnUser       - If using password authentication and HTTP push, this is
#   vtnPassword     the authorized VTN username. Leave blank to allow any
#   vtnRealm        inbound requests from any VTN.
#
#------------------------------------------------------------------------------
# clientAddress=http://localhost:8090
# vtnUser=system
# vtnPassword=IPKeys
# vtnRealm=ipkeys
#------------------------------------------------------------------------------
# Certificate configuration
#
#   bypassHostVerification - (true | false) Skip verification of the target hostname
#                            matches the names stored inside the server's X.509 certificate
#------------------------------------------------------------------------------
keystore=./eisscubeven.ks
keystorePass=changeit
privateKeyPass=changeit
truststore=./truststore.ks
truststorePass=changeit
bypassHostVerification=true
#------------------------------------------------------------------------------
# Market contexts - specify marketContexts that the VEN will recognize, starting
#                   with 1, 2... N
#
# marketContext.1 = name1
# marketContext.2 = name2
# ...
# marketContext.N = nameN
# validateMarketContexts - Set to true to have received market contexts validated,
#                          or false to accept events in any market context.
#------------------------------------------------------------------------------
# marketContext.1=eissbox3
# marketContext.2=program2
# validateMarketContexts=false
#------------------------------------------------------------------------------
# optState - in | out. This is the opt state for the VEN. If set to in (default)
#            it may be overriden on a per-asset (resource target) bases. See
#            next section for asset (resource target) configuration.
#------------------------------------------------------------------------------
# optState=in
#------------------------------------------------------------------------------
# Configure 1 - N assets (resource target IDs) and their associated opt state.
# If no opt state is given, it is assumed to be optIn.
# asset.1.id = resource target ID1
# asset.2.id = resource target ID2 ...
# asset.2.opt = in | out (or optIn | optOut)
#
# validateResourceTargets - If set to true, only accepts resource targets
#                           that have been configured.
#------------------------------------------------------------------------------
# asset.1.id=resource1
# asset.1.opt=in
# asset.1.programs = program1, program2
# asset.2.id=resource2
# asset.2.opt=in
# asset.2.programs=program1, program2
# asset.3.id=null
# asset.3.opt=null
# asset.3.programs=null
# asset.4.id=null
# asset.4.opt=null
# asset.4.programs=null
# validateResourceTargets=false
#------------------------------------------------------------------------------
# Misc.
#
#   traceMessages   - Set to true to log XML payloads sent/received. Requires
#                     log4j entry for TransportThread logging at INFO:
#                        log4j.logger.eiss.client.TransportThread=INFO, S, R
#
#   reregisterTimer - Seconds to retry if registraion fails on
#                     initial attempt or after a re-registration
#
#   cancelRegTimer  - Seconds to retry registering if the VTN has
#                     issued a CancelRegistration.
#
#   handlerClass    - Name of the class that handles control logic
#
#   connectionTimeout - The timeout in seconds until a connection is established.
#                       Value of zero (0) is interpreted as an infinite timeout.
#
#   usageDataFile  - Name of file used to persist usage data. Null to disable.
#                    This should only be used if VTN is EISS.
#
#------------------------------------------------------------------------------
traceMessages=true
reregisterTimer=10
cancelRegTimer=60
# handlerClass=eiss.client.TestClient
# handlerClass=eiss.client.JavaTestClient
connectionTimeout=600
usageDataFile=./usagedata.json
#------------------------------------------------------------------------------
# If running with TestClient, the script configured here will be invoked
# for all event changes.
#------------------------------------------------------------------------------
#notificationScript=./testscript.py
